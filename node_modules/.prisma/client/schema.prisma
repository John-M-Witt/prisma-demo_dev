// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  name       String?
  posts      Post[]
  comments   Comment[]
  created_at DateTime  @default(now())

  @@map("Users") // Maps to the "Users" table in the database
}

model Topic {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String?
  posts       Post[]

  @@map("Categories") // Maps to the "Categories" table in the database
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String
  content    String
  published  Boolean
  author     User      @relation(fields: [author_id], references: [id])
  author_id  Int
  topic      Topic?    @relation(fields: [topic_id], references: [id])
  topic_id   Int?
  comments   Comment[]
  created_at DateTime  @default(now())

  @@map("Posts") // Maps to the "Posts" table in the database
}

model Comment {
  id         Int      @id @default(autoincrement())
  content    String
  post       Post     @relation(fields: [post_id], references: [id])
  post_id    Int
  author     User     @relation(fields: [author_id], references: [id])
  author_id  Int
  created_at DateTime @default(now())

  @@map("Comments") // Maps to the "Comments" table in the database
}
